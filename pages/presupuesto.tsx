import Head from "next/head";
import { withAuthenticator } from "@aws-amplify/ui-react";
import Layout from "../components/Layout";
import {
  Stat,
  StatLabel,
  StatNumber,
  StatHelpText,
  Stack,
  Heading,
  Spinner,
  HStack,
  CircularProgress,
  CircularProgressLabel,
  Square,
  Wrap,
  WrapItem,
  Slider,
  SliderTrack,
  SliderFilledTrack,
  SliderThumb,
  SliderMark,
  useToast,
} from "@chakra-ui/react";
import _debounce from "lodash/debounce";
import Screen from "../components/Screen";
import { useSelector, useDispatch } from "react-redux";
import { getIncome, getCategories } from "../features/budget/selector";
import { updateCategory } from "../features/budget/budgetSlice";

import { money, date, icons } from "../utils";

function Home({ user }) {
  const dispatch = useDispatch();
  const toast = useToast();
  const income = useSelector(getIncome);
  const categories = useSelector(getCategories);
  const loading = false;
  const manageSliderChange = (e: number, id: string) => {
    const category = categories.find((c) => c.id === id);
    dispatch(updateCategory({ ...category, percentage: e }));
    toast({
      title: "Guardado.",
      description: "Tu cambio ha sido guardado.",
      status: "success",
      duration: 9000,
      isClosable: true,
    });
  };
  const debounceSliderChange = _debounce((e: number, id: string) => {
    manageSliderChange(e, id);
  }, 1000);
  return (
    <div>
      <Head>
        <title>Lumi Budget</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout userName={user?.username || ""} pageTitle="Presupuesto">
        <Stack spacing={8}>
          <Screen>
            <Heading as="h2" size="md" fontWeight="600">
              Ingresos del Mes
            </Heading>
            {!loading ? (
              <Stat>
                <StatLabel textTransform="capitalize">
                  {date(new Date(), "LLLL-YYY")}
                </StatLabel>
                <StatNumber
                  fontSize={["5xl", "6xl"]}
                  fontWeight="700"
                  color="purple.600"
                >
                  {money(income)}
                </StatNumber>
                <StatHelpText textTransform="capitalize">
                  Actualiza tus ingresos aquí
                </StatHelpText>
              </Stat>
            ) : (
              <Spinner />
            )}
          </Screen>
          <Screen>
            <Heading as="h2" size="md" fontWeight="600">
              Distribución del Presupuesto
            </Heading>
            <Screen>
              <Wrap>
                {categories.map((item) => (
                  <WrapItem minW="xs" width={["full", "xs"]} key={item.id}>
                    <Screen>
                      <HStack spacing={4}>
                        <Square
                          size="48px"
                          bg={item.color}
                          color="white"
                          borderRadius="md"
                          fontSize="2rem"
                        >
                          {icons(item.icon)}
                        </Square>
                        <Stat>
                          <StatLabel>{item.name}</StatLabel>
                          <StatNumber>
                            {money((item.percentage / 100) * income)}
                          </StatNumber>
                        </Stat>
                        <CircularProgress
                          value={item.percentage}
                          color={item.color}
                        >
                          <CircularProgressLabel>
                            {item.percentage}%
                          </CircularProgressLabel>
                        </CircularProgress>
                      </HStack>
                      <Slider
                        aria-label="slider-ex-2"
                        colorScheme={item.color.split(".")[0]}
                        defaultValue={item.percentage}
                        onChange={(e) => debounceSliderChange(e, item.id)}
                      >
                        <SliderTrack>
                          <SliderFilledTrack />
                        </SliderTrack>
                        <SliderThumb />
                      </Slider>
                    </Screen>
                  </WrapItem>
                ))}
              </Wrap>
            </Screen>
          </Screen>
        </Stack>
      </Layout>
    </div>
  );
}

export default withAuthenticator(Home);
