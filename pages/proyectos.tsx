import { useMemo } from "react";
import Head from "next/head";
import { VscAdd } from "react-icons/vsc";
import { withAuthenticator } from "@aws-amplify/ui-react";
import { FiEdit, FiTrash2 } from "react-icons/fi";
import Layout from "../components/Layout";
import {
  Button,
  Text,
  Flex,
  Wrap,
  WrapItem,
  Stack,
  HStack,
} from "@chakra-ui/react";
import Table from "../components/Table";
import Screen from "../components/Screen";
import Stats from "../components/Stats";

const proyectos = [
  {
    id: 1,
    name: "Viaje a Japon",
    description:
      "Esse quasi tempora est minima voluptas blanditiis. Et at et dolor vel. Voluptatibus dolores id id officia iure. Omnis in quia nostrum ipsum. Eius modi qui eligendi beatae. Rerum exercitationem nisi occaecati sapiente minima fuga fugit voluptatem consequatur.",
    status: "En proceso",
    date: "2020-05-01",
    dueDate: "2020-05-10",
    amountGoal: "150000",
    amountActual: "24500",
    amountPaid: "7250",
    amountPending: "0",
    movements: [
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
    ],
  },
  {
    id: 1,
    name: "est dignissimos facere",
    description:
      "Aliquam quod dolore aut optio et. Sapiente reiciendis eum tempora exercitationem minus dicta. Provident illum tempore itaque ut ex cupiditate hic. Eaque accusantium assumenda ut quos consequuntur ex perferendis expedita.",
    status: "En proceso",
    date: "2020-05-01",
    dueDate: "2020-05-10",
    amountGoal: "100",
    amountActual: "50",
    amountPaid: "50",
    amountPending: "0",
    movements: [
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
    ],
  },
  {
    id: 1,
    name: "Proyecto 3",
    description:
      "Esse quasi tempora est minima voluptas blanditiis. Et at et dolor vel. Voluptatibus dolores id id officia iure. Omnis in quia nostrum ipsum. Eius modi qui eligendi beatae.",
    status: "En proceso",
    date: "2020-05-01",
    dueDate: "2020-05-10",
    amountGoal: "100",
    amountActual: "50",
    amountPaid: "50",
    amountPending: "0",
    movements: [
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
      {
        id: 1,
        date: "2020-01-01",
        description: "Gasto de mantenimiento",
        amount: -100,
      },
    ],
  },
];

function Transacciones({ user }) {
  const columns = useMemo(
    () => [
      {
        Header: "Fecha",
        accessor: "date",
      },
      {
        Header: "DescripciÃ³n",
        accessor: "description",
      },
      {
        Header: "Monto",
        accessor: "amount",
      },
      {
        id: "edit",
        accessor: (row) => row,
        Cell: ({ cell: { value } }) => (
          <HStack>
            <Button bg="white" onClick={() => console.log(value)}>
              <FiEdit />
            </Button>
            <Button
              bg="white"
              onClick={() => console.log(value.id)}
              color="red.500"
            >
              <FiTrash2 />
            </Button>
          </HStack>
        ),
      },
    ],
    []
  );

  const renderTables = proyectos.map((proyecto) => (
    <WrapItem
      key={proyecto.id}
      width="-moz-fit-content"
      maxW={{ base: "100%", lg: "31%" }}
    >
      <Screen title={proyecto.name} description={proyecto.description}>
        <Stack spacing={4}>
          <Wrap justifyContent="space-between" spacing={4}>
            <WrapItem>
              <Stats name="Meta" amount={Number(proyecto.amountGoal)} />
            </WrapItem>
            <WrapItem>
              <Stats
                name="Ahorrado a la fecha"
                amount={Number(proyecto.amountActual)}
              />
            </WrapItem>
            <WrapItem>
              <Stats
                name="Cantidad Pendiente"
                amount={Number(proyecto.amountPending)}
              />
            </WrapItem>
            <WrapItem>
              <Stats
                name="Menusalidad Sugerida"
                amount={Number(proyecto.amountPaid)}
              />
            </WrapItem>
          </Wrap>
          <HStack justifyContent="space-between" spacing={4}>
            <Button size="md" colorScheme="blue">
              Abonar
            </Button>
          </HStack>
          <Table data={proyecto.movements} columns={columns} />
        </Stack>
      </Screen>
    </WrapItem>
  ));

  return (
    <div>
      <Head>
        <title>Lumi Budget</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout userName={user?.username || ""} pageTitle="Mis Proyectos">
        <Wrap spacing={8}>
          {renderTables}
          <WrapItem
            width="100%"
            maxW={{ base: "100%", lg:  "31%" }}
            minH="123px"
          >
            <Screen>
              <Button
                w="full"
                h="90px"
                color="gray.400"
                colorScheme="whiteAlpha"
                borderWidth="1px"
                borderColor="gray.200"
                borderRadius="md"
                onClick={() => {
                  console.log("click");
                }}
              >
                <Flex direction="column" align="center" justify="center">
                  <VscAdd />
                  <Text>Nuevo</Text>
                </Flex>
              </Button>
            </Screen>
          </WrapItem>
        </Wrap>
      </Layout>
    </div>
  );
}

export default withAuthenticator(Transacciones);
